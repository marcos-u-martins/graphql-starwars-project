import Head from 'next/head'
import styles from '../styles/Home.module.css'
import { ApolloClient, InMemoryCache, gql } from '@apollo/client'
import Card from '@octanner/prism-core/Card';
import CardContent from '@octanner/prism-core/CardContent';
import CardActions from '@octanner/prism-core/CardActions';
import Typography from '@octanner/prism-core/Typography'
import Grid from '@octanner/prism-core/Grid'

export default function Home({data}) {
  return (
    <div>
      <Head>
          <title>Star Wars Starships</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
      </Head>
      <Grid container>
          <main className={styles.main}>
            <h1 className={styles.title}>
              Star Wars Starships
            </h1>

            <p className={styles.description}>
              <code className={styles.code}>Learn about all the vehicles that are part of the Star Wars movie franchise.</code>
            </p>

            <div>
              {data.map(vehicle => {
                return (
                  <Grid 
                    key={vehicle.id}
                    item
                  >
                    <Card style={{marginTop: '10px'}}>
                      <CardContent>
                        <Typography color="textSecondary" gutterBottom>
                          { vehicle.model } model
                        </Typography>
                        <Typography variant="h5" component="h2">
                          { vehicle.name }
                        </Typography>
                        <CardActions>
                          <Typography color="textSecondary">{`Crew Size: ${vehicle.crew}`}</Typography>
                          {vehicle.costInCredits && <Typography color="textSecondary">{vehicle.costInCredits} Credits</Typography>}
                          <Typography color="textSecondary">{`Passengers: ${vehicle.passengers}`}</Typography>
                        </CardActions>
                        <CardActions>
                          <Typography variant="body2" component="p">
                              { vehicle.filmConnection.films[0].title }
                            </Typography>
                        </CardActions>
                      </CardContent>
                    </Card>
                  </Grid>
                );
              })}
            </div>
          </main>
        
        </Grid>
      </div>
  )
}

export async function getStaticProps() {
  const client = new ApolloClient({
    uri: 'https://swapi-graphql.netlify.app/.netlify/functions/index',
    cache: new InMemoryCache()
  })

  const { data } = await client.query({
    query: gql`
      query QueryVehicles {
        allStarships {
          starships {
            name
            model
            filmConnection {
              films {
                title
              }
            }
            id
            costInCredits
            passengers
            crew
          }
        }
      }
    `
  })

  return {
    props: {
      data: data.allStarships.starships
    }
  }
}

